class Solution {
public:    
    
    bool check(int line[], int curr) {
        for (int i = 1; i < curr; ++i)
            if (line[i] == line[curr] || line[i]-line[curr] == i -curr || line[i]-line[curr] == curr-i )
                return false;
        
        return true;
        
    }
    
    void nqueens(int line[], int curr, int K, int &total) {
        if (curr == K+1) {
            ++total;
            return;            
        }
        
        for (int i = 1; i <= K; ++i) {
            
            line[curr] = i;
            if (check(line, curr))
                nqueens(line, curr+1, K, total);
            line[curr] = 0;
        }
                
        
    }
    int totalNQueens(int n) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int *line = new int[n+1];
        memset(line, 0, sizeof(int)*(n+1));       
        
        int total = 0;
        
        nqueens(line, 1, n, total);
        
        return total;
        
    }
};