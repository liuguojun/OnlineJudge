/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *partition(ListNode *head, int x) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
                
        if (head == NULL)
            return NULL;      
              
        ListNode* less = NULL;
        ListNode* great = NULL;
        
        ListNode* lhead = NULL;
        ListNode* ghead = NULL;
        
        while (head != NULL) {
            if (head->val < x) {
                if (less == NULL) {
                    less = head;
                    lhead = head;
                } else {
                    less->next = head;
                    less = head;
                }
            } else {
                if (great == NULL) {
                    great = head;
                    ghead = head;                    
                } else {
                    great->next = head;
                    great = head;
                }
            }
            
            head = head->next;
        }
        
        if (lhead == NULL) {
            great->next = NULL;
            return ghead;
        } else if (ghead == NULL) {
            less->next = NULL;
            return lhead;
        } else {
            great->next = NULL;
            less->next = ghead;
            return lhead;
        }
        
    }
};