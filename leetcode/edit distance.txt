class Solution {
public:
    int minDistance(string word1, string word2) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if (word1.length() == 0)
            return word2.length();
        
        if (word2.length() == 0)
            return word1.length();
            
        static int dp[1000][1000] = {0};
        
        int l1 = word1.size();
        int l2 = word2.size();
        
        int i, j;
        
        for (i=0; i<=l1; ++i)
            dp[i][0] = i;
        for (j=0; j<=l2; ++j)
            dp[0][j] = j;
            
        
        for (i=1; i<=l1; ++i)
            for (j=1; j<=l2; ++j) {
                               
                int a = dp[i-1][j] + 1;
                int b = dp[i][j-1] + 1;
                int c = dp[i-1][j-1] +  (word1[i-1]==word2[j-1]?0:1);
     
                dp[i][j] = min(a, min(b, c));               
                
            }
            
        return dp[l1][l2];
            
        
    }
};