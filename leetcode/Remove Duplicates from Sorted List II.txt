/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *deleteDuplicates(ListNode *head) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if (head == NULL)
            return NULL;
        
        ListNode tmphead(head->val-1);
        tmphead.next = head;
        
        ListNode* prev = &tmphead;
        ListNode* curr = head;
        
        while (curr != NULL) {
            if (curr->next == NULL || curr->val != curr->next->val) {
                prev = prev->next;
                prev->val = curr->val;
            } else {
                while (curr != NULL && curr->next != NULL && curr->val == curr->next->val)
                    curr = curr->next;                
            }
            if (curr != NULL)
                curr = curr->next;
        }
        
        // delete duplicate node
        
        while (prev->next != NULL ) {
            ListNode* todelete = prev->next;
            prev->next = todelete->next;
            delete todelete;
        }
        
        return tmphead.next;
    }
};