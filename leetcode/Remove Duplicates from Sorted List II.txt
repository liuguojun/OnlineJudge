/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
 
void deleteNode(ListNode* head) {
    while (head != NULL) {
        ListNode* tmp = head;
        head = head->next;
        delete tmp;
    }
}
class Solution {
public:
    ListNode *deleteDuplicates(ListNode *head) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if (head == NULL)
            return NULL;
        
        ListNode tmphead(0);
        tmphead.next = head;
        
        ListNode* prev = &tmphead;
        ListNode* curr = head;
      
        
        while (curr != NULL) {
            if (curr->next != NULL && curr->val == curr->next->val) {
                ListNode* last = curr->next;
                while (last != NULL && last->next != NULL && last->next->val == curr->val)
                    last = last->next;
                
                prev->next = last->next;
                last->next = NULL;
                deleteNode(curr);
                curr = prev->next;
            } else {
                curr = curr->next;
                prev = prev->next;
            }
            
        }
        
        return tmphead.next;
        
    }
};