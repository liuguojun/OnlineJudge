/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode *sortedListToBST(ListNode *head) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if (head == NULL)
            return NULL;
        
        ListNode* fast = head;
        ListNode* slow = head;
        ListNode* prev = NULL;
        
        while (fast != NULL && fast->next != NULL) {
            
            if (prev == NULL)
                prev = slow;
            else 
                prev = prev->next;
            
            slow = slow->next;            
            fast = fast->next->next;
            
        }
        
        TreeNode* node = new TreeNode(slow->val);
        
        if (prev != NULL) {
            prev->next = NULL;       
            node->left = sortedListToBST(head);
        }
        
        node->right = sortedListToBST(slow->next);
        
        return node;
    }
};