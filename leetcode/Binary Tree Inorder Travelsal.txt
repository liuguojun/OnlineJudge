/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> inorderTraversal(TreeNode *root) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        vector<int> ret;
        
        if (root == NULL)
            return ret;
        
        stack<TreeNode*> mystack;
        
        while (!mystack.empty() || root) {
            if (root) {
                mystack.push(root);
                root = root->left;
            } else {
                root = mystack.top();
                mystack.pop();
                
                ret.push_back(root->val);
                root = root->right;
            }
            
        }
        return ret;
    }
};