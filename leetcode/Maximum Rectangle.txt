class Solution {
public:
    int maximalRectangle(vector<vector<char> > &matrix) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if (matrix.empty())
            return 0;
            
        int M = matrix.size();
        int N = matrix[0].size();
        
        int MAX = INT_MIN;
        
        //vector<char> prev(N, '0');
        vector<int> curr(N, 0);
        vector<int> left(N, 0);
        vector<int> right(N, 0);
            
        for (int i = 0; i < M; ++i) {
            for (int j = 0; j < N; ++j) {
                if (matrix[i][j] == '0')
                    curr[j] = 0;
                else 
                    curr[j] += 1;
            }
        
            left[0] = 0;
            for (int j = 1; j < N; ++j) {
                
                left[j] = j;
            
                while (left[j] > 0 && curr[j] <= curr[left[j]-1])
                    left[j] = left[left[j]-1];
                
            }
          
            right[N-1] = N-1;
            for (int j = N-2; j >=0; --j) {
                right[j] = j;
              
                while (right[j] < N-1 && curr[j] <= curr[right[j]+1])
                    right[j] = right[right[j] + 1];
              
                
            }
          
            for (int j = 0; j < N; ++j) {
                int size = curr[j] * (right[j]-left[j]+1);
                if (size > MAX)
                    MAX = size;
            }
        
            
            
        }
        
        return MAX;
        
        
    }
};